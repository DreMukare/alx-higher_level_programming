This is a doctest for matrix_divided
It is supposed to divide all the elements of a matrix

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check for correct input 
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[3]]/3)
[[1.0]]

>>> matrix_divided([[3,9], [12, 15]], 3)
[[-1.0, -2.67], [-4.0, -3.67]]

Check for wrong matrix arg
>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2], [3, 4, 5]], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([['1', 2, 'FREE'], [2, 3, 4]], 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([1, 2, 3], 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided((1, 2, 3), 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([], 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Check for wrong second arg
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], '3')
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided([[3,9], [12, 15]], 0)
Traceback (most recent call last)
    ...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float("inf"))
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float("-inf"))
Traceback (most recent call last):
   ...
OverflowError: cannot convert float infinity to integer
